{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction CategoryScreenComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"click\", function CategoryScreenComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const category_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startCategory(category_r1));\n    });\n    i0.ɵɵelementStart(1, \"div\", 4)(2, \"div\", 5);\n    i0.ɵɵelement(3, \"img\", 6);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵelement(7, \"div\", 8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"alt\", category_r1.name);\n    i0.ɵɵproperty(\"src\", category_r1.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.getCategoryProgress(category_r1) + \"%\");\n  }\n}\nexport class CategoryScreenComponent {\n  constructor(router) {\n    this.router = router;\n    this.categories = [{\n      name: 'Anatomia',\n      icon: './assets/anatomia.png',\n      progress: 5,\n      id: 1\n    }, {\n      name: 'Fisiologia',\n      icon: './assets/Fisiologia.png',\n      progress: 50,\n      id: 2\n    }, {\n      name: 'Patologia',\n      icon: './assets/Patologia.jpeg',\n      progress: 50,\n      id: 3\n    }, {\n      name: 'Neurociência',\n      icon: './assets/Neurociencia.png',\n      progress: 0,\n      id: 4\n    }, {\n      name: 'Farmacologia',\n      icon: './assets/farmacologia.png',\n      progress: 0,\n      id: 5\n    }, {\n      name: 'Microbiologia',\n      icon: './assets/microbiologia.png',\n      progress: 0,\n      id: 6\n    }, {\n      name: 'Epidemiologia',\n      icon: './assets/epidemologia.png',\n      progress: 0,\n      id: 7\n    }, {\n      name: 'Cirurgia',\n      icon: './assets/cirurgia.png',\n      progress: 0,\n      id: 8\n    }];\n    this.answers = [];\n    this.totalQuestions = 10; // Defina o número total de questões em uma categoria\n  }\n\n  startCategory(category) {\n    this.router.navigate(['quiz', category.id]);\n  }\n  submitAnswer(category, isCorrect) {\n    this.answers.push({\n      categoryID: category.id,\n      isCorrect: isCorrect\n    });\n    const categoryAnswers = this.answers.filter(answer => answer.categoryID === category.id);\n    const correctAnswers = categoryAnswers.filter(answer => answer.isCorrect);\n    if (categoryAnswers.length === this.totalQuestions) {\n      category.progress = 100;\n    } else {\n      category.progress = correctAnswers.length / categoryAnswers.length * 100;\n    }\n  }\n  getCategoryProgress(category) {\n    return category.progress;\n  }\n  static #_ = this.ɵfac = function CategoryScreenComponent_Factory(t) {\n    return new (t || CategoryScreenComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategoryScreenComponent,\n    selectors: [[\"app-category-screen\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[1, \"category-screen\"], [1, \"category-grid\"], [\"class\", \"category-box\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"category-box\", 3, \"click\"], [1, \"category\"], [1, \"category-content\"], [3, \"src\", \"alt\"], [1, \"progress-bar\"], [1, \"bar\"]],\n    template: function CategoryScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"In\\u00EDcio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, CategoryScreenComponent_div_4_Template, 8, 5, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".category-box[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: calc(25% - 20px); \\n\\n  box-sizing: border-box;\\n  padding: 10px;\\n  border: 1px solid #000;\\n  background-color: #f0f0f0;\\n  margin-bottom: 20px;\\n  margin-right: 10px; \\n\\n}\\n\\n\\n.category[_ngcontent-%COMP%] {\\n  text-align: center;\\n  position: relative;\\n}\\n\\n.category[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 70px;\\n  height: 100px;\\n  cursor: pointer;\\n  box-shadow: 2px 2px 5px #888888;\\n  transition: transform 0.3s;\\n}\\n\\n.category[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.1);\\n}\\n\\n.progress-bar[_ngcontent-%COMP%] {\\n  height: 2px;\\n  padding: 1px;\\n  background-color: #ffffff;\\n  display: flex;\\n  box-shadow: 2px 2px 5px #888888;\\n  border-radius: 5px;\\n  position: absolute; \\n  bottom: -5px; \\n\\n  left: 10px; \\n\\n  right: 10px; \\n\\n}\\n\\n.bar[_ngcontent-%COMP%] {\\n  height: 100%;\\n  background-color: #007bff;\\n}\\n\\n.category-screen[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 255, 255);\\n  width: 100vw;\\n  height: 100vh;\\n  overflow: hidden;\\n  margin: -1;\\n  border: -1;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  display: flex;\\n  margin: 0px;\\n}\\n\\n.category-grid[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2F0ZWdvcnktc2NyZWVuL2NhdGVnb3J5LXNjcmVlbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLHVCQUF1QixFQUFFLDJFQUEyRTtFQUNwRyxzQkFBc0I7RUFDdEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLGtCQUFrQixFQUFFLCtCQUErQjtBQUNyRDs7O0FBR0E7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsV0FBVztFQUNYLGFBQWE7RUFDYixlQUFlO0VBQ2YsK0JBQStCO0VBQy9CLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1oseUJBQXlCO0VBQ3pCLGFBQWE7RUFDYiwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixZQUFZLEVBQUUsNEJBQTRCO0VBQzFDLFVBQVUsRUFBRSw0QkFBNEI7RUFDeEMsV0FBVyxFQUFFLDRCQUE0QjtBQUMzQzs7QUFFQTtFQUNFLFlBQVk7RUFDWix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsWUFBWTtFQUNaLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLDhCQUE4QjtBQUNoQyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXRlZ29yeS1ib3gge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB3aWR0aDogY2FsYygyNSUgLSAyMHB4KTsgLyogMjUlIGRhIGxhcmd1cmEgZG8gY29udMODwqppbmVyIHBhaSBjb20gbWFyZ2VucyBlc3F1ZXJkYSBlIGRpcmVpdGEgZGUgMTBweCAqL1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IC8qIEFkaWNpb25hbmRvIG1hcmdlbSBkaXJlaXRhICovXHJcbn1cclxuXHJcblxyXG4uY2F0ZWdvcnkge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5jYXRlZ29yeSBpbWcge1xyXG4gIHdpZHRoOiA3MHB4O1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGJveC1zaGFkb3c6IDJweCAycHggNXB4ICM4ODg4ODg7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XHJcbn1cclxuXHJcbi5jYXRlZ29yeSBpbWc6aG92ZXIge1xyXG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcclxufVxyXG5cclxuLnByb2dyZXNzLWJhciB7XHJcbiAgaGVpZ2h0OiAycHg7XHJcbiAgcGFkZGluZzogMXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3gtc2hhZG93OiAycHggMnB4IDVweCAjODg4ODg4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7IFxyXG4gIGJvdHRvbTogLTVweDsgLyogcG9zaWNpb25hbWVudG8gYWp1c3RhZG8gKi9cclxuICBsZWZ0OiAxMHB4OyAvKiBwb3NpY2lvbmFtZW50byBhanVzdGFkbyAqL1xyXG4gIHJpZ2h0OiAxMHB4OyAvKiBwb3NpY2lvbmFtZW50byBhanVzdGFkbyAqL1xyXG59XHJcblxyXG4uYmFyIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcclxufVxyXG5cclxuLmNhdGVnb3J5LXNjcmVlbiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgMjU1LCAyNTUpO1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgbWFyZ2luOiAtMTtcclxuICBib3JkZXI6IC0xO1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG4uY2F0ZWdvcnktZ3JpZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","CategoryScreenComponent_div_4_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","_r3","category_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","startCategory","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵpropertyInterpolate","name","ɵɵproperty","icon","ɵɵsanitizeUrl","ɵɵtextInterpolate","ɵɵstyleProp","ctx_r0","getCategoryProgress","CategoryScreenComponent","constructor","router","categories","progress","id","answers","totalQuestions","category","navigate","submitAnswer","isCorrect","push","categoryID","categoryAnswers","filter","answer","correctAnswers","length","_","ɵɵdirectiveInject","i1","Router","_2","selectors","decls","vars","consts","template","CategoryScreenComponent_Template","rf","ctx","ɵɵtemplate","CategoryScreenComponent_div_4_Template"],"sources":["C:\\Users\\pedro\\OneDrive\\Documentos\\GitHub\\unirv-quiz-medicina\\telaQuiz\\src\\app\\category-screen\\category-screen.component.ts","C:\\Users\\pedro\\OneDrive\\Documentos\\GitHub\\unirv-quiz-medicina\\telaQuiz\\src\\app\\category-screen\\category-screen.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\ninterface Category {\r\n  name: string;\r\n  icon: string;\r\n  progress: number;\r\n  id: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-category-screen',\r\n  templateUrl: './category-screen.component.html',\r\n  styleUrls: ['./category-screen.component.css']\r\n})\r\nexport class CategoryScreenComponent {\r\n  categories: Category[] = [\r\n    {\r\n      name: 'Anatomia',\r\n      icon: './assets/anatomia.png',\r\n      progress: 5,\r\n      id: 1\r\n    },\r\n    {\r\n      name: 'Fisiologia',\r\n      icon: './assets/Fisiologia.png',\r\n      progress: 50,\r\n      id: 2\r\n    },\r\n    {\r\n      name: 'Patologia',\r\n      icon: './assets/Patologia.jpeg',\r\n      progress: 50,\r\n      id: 3\r\n    },\r\n    {\r\n      name: 'Neurociência',\r\n      icon: './assets/Neurociencia.png',\r\n      progress: 0,\r\n      id: 4\r\n    },\r\n    {\r\n      name: 'Farmacologia',\r\n      icon: './assets/farmacologia.png',\r\n      progress: 0,\r\n      id: 5\r\n    },\r\n    {\r\n      name: 'Microbiologia',\r\n      icon: './assets/microbiologia.png',\r\n      progress: 0,\r\n      id: 6\r\n    },\r\n    {\r\n      name: 'Epidemiologia',\r\n      icon: './assets/epidemologia.png',\r\n      progress: 0,\r\n      id: 7\r\n    },\r\n    {\r\n      name: 'Cirurgia',\r\n      icon: './assets/cirurgia.png',\r\n      progress: 0,\r\n      id: 8\r\n    },\r\n  ];\r\n\r\n  answers: { categoryID: number, isCorrect: boolean }[] = [];\r\n\r\n  totalQuestions: number = 10; // Defina o número total de questões em uma categoria\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  startCategory(category: Category) {\r\n    this.router.navigate(['quiz', category.id]);\r\n  }\r\n\r\n  submitAnswer(category: Category, isCorrect: boolean) {\r\n    this.answers.push({ categoryID: category.id, isCorrect: isCorrect });\r\n\r\n    const categoryAnswers = this.answers.filter(answer => answer.categoryID === category.id);\r\n    const correctAnswers = categoryAnswers.filter(answer => answer.isCorrect);\r\n\r\n    if (categoryAnswers.length === this.totalQuestions) {\r\n      category.progress = 100;\r\n    } else {\r\n      category.progress = (correctAnswers.length / categoryAnswers.length) * 100;\r\n    }\r\n  }\r\n\r\n  getCategoryProgress(category: Category) {\r\n    return category.progress;\r\n  }\r\n}\r\n","<div class=\"category-screen\">\r\n  <h1>Início</h1>\r\n  <div class=\"category-grid\">\r\n    <div class=\"category-box\" *ngFor=\"let category of categories\" (click)=\"startCategory(category)\">\r\n      <div class=\"category\">\r\n        <div class=\"category-content\">\r\n          <img [src]=\"category.icon\" alt=\"{{category.name}}\">\r\n          <p>{{category.name}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"progress-bar\">\r\n        <div class=\"bar\" [style.width]=\"getCategoryProgress(category) + '%'\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}