{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction TelaPerguntasComponent_div_1_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"label\", 6)(2, \"input\", 7);\n    i0.ɵɵlistener(\"click\", function TelaPerguntasComponent_div_1_li_4_Template_input_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const alternativa_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.selectAnswer(alternativa_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const alternativa_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", alternativa_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"selected\", alternativa_r2.id === ctx_r1.selectedAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", alternativa_r2.resposta, \" \");\n  }\n}\nfunction TelaPerguntasComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, TelaPerguntasComponent_div_1_li_4_Template, 5, 4, \"li\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TelaPerguntasComponent_div_1_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.confirmAnswer());\n    });\n    i0.ɵɵtext(7, \"Confirmar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.question.conteudo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.question.alternativas);\n  }\n}\nexport class TelaPerguntasComponent {\n  constructor(http) {\n    this.http = http;\n    this.perguntas = [];\n    this.questionIndex = 0;\n    this.showResult = false;\n    this.score = 0;\n  }\n  ngOnInit() {\n    this.loadQuestions();\n  }\n  loadQuestions() {\n    this.http.get('assets/perguntas.json').subscribe(data => {\n      this.perguntas = data;\n      this.loadQuestion();\n    });\n  }\n  loadQuestion() {\n    if (this.perguntas.length > 0 && this.questionIndex < this.perguntas.length) {\n      this.question = this.perguntas[this.questionIndex];\n      this.selectedAnswer = undefined;\n    } else {\n      // Resetar o índice quando todas as perguntas forem respondidas\n      this.questionIndex = 0;\n    }\n  }\n  selectAnswer(alternativaId) {\n    this.selectedAnswer = alternativaId;\n  }\n  confirmAnswer() {\n    if (this.selectedAnswer !== undefined) {\n      // Verificar se ainda há perguntas para exibir\n      if (this.questionIndex < this.perguntas.length - 1) {\n        // Avançar para a próxima pergunta\n        this.questionIndex++;\n        this.loadQuestion();\n      } else {\n        // Se for a última pergunta, exibir o resultado\n        this.showResult = true;\n        this.calculateScore();\n      }\n    }\n  }\n  calculateScore() {\n    // Calcular a pontuação com base nas respostas corretas\n    this.score = this.perguntas.reduce((acc, pergunta) => {\n      const respostaSelecionada = pergunta.alternativas.find(a => a.id === this.selectedAnswer);\n      if (respostaSelecionada && respostaSelecionada.id === pergunta.respostaCorretaId) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n  }\n  static #_ = this.ɵfac = function TelaPerguntasComponent_Factory(t) {\n    return new (t || TelaPerguntasComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TelaPerguntasComponent,\n    selectors: [[\"app-tela-perguntas\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"container\"], [\"class\", \"question-container\", 4, \"ngIf\"], [1, \"question-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"button-container\"], [1, \"confirm-button\", 3, \"click\"], [1, \"alternativa-label\"], [\"type\", \"radio\", \"name\", \"alternativa\", 3, \"value\", \"click\"], [1, \"alternativa-box\"]],\n    template: function TelaPerguntasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TelaPerguntasComponent_div_1_Template, 8, 2, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.question && !ctx.showResult);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    padding: 0;\\n    text-align: center; \\n\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\n    display: none;\\n  }\\n  \\n  .alternativa-label[_ngcontent-%COMP%] {\\n    cursor: pointer; \\n\\n  }\\n  \\n  .alternativa-box[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    width: 70%;\\n    padding: 15px;\\n    border: 2px solid #ccc;\\n    border-radius: 5px;\\n    text-align: center; \\n\\n    transition: background-color 0.3s; \\n\\n  }\\n  \\n  .alternativa-box.selected[_ngcontent-%COMP%] {\\n    background-color: green;\\n  }\\n  \\n  .alternativa-box[_ngcontent-%COMP%]:hover {\\n    background-color: #f0f0f0;\\n  }\\n  \\n  .button-container[_ngcontent-%COMP%] {\\n    text-align: center; \\n\\n    margin-top: 20px; \\n\\n  }\\n  \\n  .confirm-button[_ngcontent-%COMP%] {\\n    padding: 10px 20px; \\n\\n    background-color: green; \\n\\n    color: #fff; \\n\\n    border-color: green; \\n\\n    border-radius: 5px; \\n\\n    cursor: pointer;\\n  }\\n  \\n  .confirm-button[_ngcontent-%COMP%]:hover {\\n    background-color: #fff;\\n    color: green;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVsYS1wZXJndW50YXMvdGVsYS1wZXJndW50YXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjs7RUFFQTtJQUNFLHFCQUFxQjtJQUNyQixVQUFVO0lBQ1Ysa0JBQWtCLEVBQUUsK0JBQStCO0VBQ3JEOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUVBO0lBQ0UsZUFBZSxFQUFFLDhCQUE4QjtFQUNqRDs7RUFFQTtJQUNFLHFCQUFxQjtJQUNyQixVQUFVO0lBQ1YsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsa0JBQWtCLEVBQUUsdUNBQXVDO0lBQzNELGlDQUFpQyxFQUFFLG1EQUFtRDtFQUN4Rjs7RUFFQTtJQUNFLHVCQUF1QjtFQUN6Qjs7RUFFQTtJQUNFLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLGtCQUFrQixFQUFFLHVDQUF1QztJQUMzRCxnQkFBZ0IsRUFBRSx5QkFBeUI7RUFDN0M7O0VBRUE7SUFDRSxrQkFBa0IsRUFBRSx3QkFBd0I7SUFDNUMsdUJBQXVCLEVBQUUsMEJBQTBCO0lBQ25ELFdBQVcsRUFBRSwwQkFBMEI7SUFDdkMsbUJBQW1CLEVBQUUsbUJBQW1CO0lBQ3hDLGtCQUFrQixFQUFFLHNCQUFzQjtJQUMxQyxlQUFlO0VBQ2pCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLFlBQVk7RUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgfVxyXG4gIFxyXG4gIHVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRyYWxpemEgYXMgYWx0ZXJuYXRpdmFzICovXHJcbiAgfVxyXG4gIFxyXG4gIGxpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICBcclxuICAuYWx0ZXJuYXRpdmEtbGFiZWwge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyOyAvKiBBZGljaW9uYSBjdXJzb3IgYXBvbnRhZG9yICovXHJcbiAgfVxyXG4gIFxyXG4gIC5hbHRlcm5hdGl2YS1ib3gge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IDcwJTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyAvKiBDZW50cmFsaXphIG8gdGV4dG8gZGVudHJvIGRhIGNhaXhhICovXHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7IC8qIEFkaWNpb25hIHRyYW5zacODwqfDg8KjbyBzdWF2ZSBwYXJhIGEgbXVkYW7Dg8KnYSBkZSBjb3IgKi9cclxuICB9XHJcbiAgXHJcbiAgLmFsdGVybmF0aXZhLWJveC5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcclxuICB9XHJcbiAgXHJcbiAgLmFsdGVybmF0aXZhLWJveDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwO1xyXG4gIH1cclxuICBcclxuICAuYnV0dG9uLWNvbnRhaW5lciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRyYWxpemEgbyBib3TDg8KjbyBob3Jpem9udGFsbWVudGUgKi9cclxuICAgIG1hcmdpbi10b3A6IDIwcHg7IC8qIEVzcGHDg8KnYW1lbnRvIHN1cGVyaW9yICovXHJcbiAgfVxyXG4gIFxyXG4gIC5jb25maXJtLWJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7IC8qIEVzcGHDg8KnYW1lbnRvIGludGVybm8gKi9cclxuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOyAvKiBDb3IgZGUgZnVuZG8gZG8gYm90w4PCo28gKi9cclxuICAgIGNvbG9yOiAjZmZmOyAvKiBDb3IgZG8gdGV4dG8gZG8gYm90w4PCo28gKi9cclxuICAgIGJvcmRlci1jb2xvcjogZ3JlZW47IC8qIFJlbW92ZSBhIGJvcmRhICovXHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7IC8qIEJvcmRhIGFycmVkb25kYWRhICovXHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5jb25maXJtLWJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TelaPerguntasComponent_div_1_li_4_Template_input_click_2_listener","restoredCtx","ɵɵrestoreView","_r4","alternativa_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","selectAnswer","id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵclassProp","ctx_r1","selectedAnswer","ɵɵtextInterpolate1","resposta","ɵɵtemplate","TelaPerguntasComponent_div_1_li_4_Template","TelaPerguntasComponent_div_1_Template_button_click_6_listener","_r6","ctx_r5","confirmAnswer","ɵɵtextInterpolate","ctx_r0","question","conteudo","alternativas","TelaPerguntasComponent","constructor","http","perguntas","questionIndex","showResult","score","ngOnInit","loadQuestions","get","subscribe","data","loadQuestion","length","undefined","alternativaId","calculateScore","reduce","acc","pergunta","respostaSelecionada","find","a","respostaCorretaId","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","TelaPerguntasComponent_Template","rf","ctx","TelaPerguntasComponent_div_1_Template"],"sources":["C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.ts","C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Pergunta {\n  id: number;\n  tipo: 'texto' | 'imagem';\n  conteudo: string;\n  alternativas: Alternativa[];\n  respostaCorretaId: number; // Adicione o ID da alternativa correta\n}\n\ninterface Alternativa {\n  id: number;\n  resposta: string;\n}\n\n@Component({\n  selector: 'app-tela-perguntas',\n  templateUrl: './tela-perguntas.component.html',\n  styleUrls: ['./tela-perguntas.component.css']\n})\nexport class TelaPerguntasComponent implements OnInit {\n  perguntas: Pergunta[] = [];\n  question: Pergunta | undefined;\n  questionIndex: number = 0;\n  selectedAnswer: number | undefined;\n  showResult: boolean = false;\n  score: number = 0;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.loadQuestions();\n  }\n\n  loadQuestions() {\n    this.http.get<Pergunta[]>('assets/perguntas.json').subscribe(data => {\n      this.perguntas = data;\n      this.loadQuestion();\n    });\n  }\n\n  loadQuestion() {\n    if (this.perguntas.length > 0 && this.questionIndex < this.perguntas.length) {\n      this.question = this.perguntas[this.questionIndex]; \n      this.selectedAnswer = undefined;\n    } else {\n      // Resetar o índice quando todas as perguntas forem respondidas\n      this.questionIndex = 0;\n    }\n  }\n\n  selectAnswer(alternativaId: number) {\n    this.selectedAnswer = alternativaId;\n  }\n\n  confirmAnswer() {\n    if (this.selectedAnswer !== undefined) {\n      // Verificar se ainda há perguntas para exibir\n      if (this.questionIndex < this.perguntas.length - 1) {\n        // Avançar para a próxima pergunta\n        this.questionIndex++;\n        this.loadQuestion();\n      } else {\n        // Se for a última pergunta, exibir o resultado\n        this.showResult = true;\n        this.calculateScore();\n      }\n    }\n  }\n\n\n  calculateScore() {\n    // Calcular a pontuação com base nas respostas corretas\n    this.score = this.perguntas.reduce((acc, pergunta) => {\n      const respostaSelecionada = pergunta.alternativas.find(a => a.id === this.selectedAnswer);\n      if (respostaSelecionada && respostaSelecionada.id === pergunta.respostaCorretaId) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n  }\n}","<div class=\"container\">\n    <div class=\"question-container\" *ngIf=\"question && !showResult\">\n      <h2>{{ question.conteudo }}</h2>\n      <ul>\n        <li *ngFor=\"let alternativa of question.alternativas\">\n          <label class=\"alternativa-label\">\n            <input type=\"radio\" name=\"alternativa\" [value]=\"alternativa.id\" (click)=\"selectAnswer(alternativa.id)\">\n            <div class=\"alternativa-box\" [class.selected]=\"alternativa.id === selectedAnswer\">\n              {{ alternativa.resposta }}\n            </div>\n          </label>\n        </li>\n      </ul>\n      <div class=\"button-container\">\n        <button class=\"confirm-button\" (click)=\"confirmAnswer()\">Confirmar</button>\n      </div>\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}