{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction TelaPerguntasComponent_div_0_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\")(1, \"input\", 3);\n    i0.ɵɵlistener(\"change\", function TelaPerguntasComponent_div_0_li_4_Template_input_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const alternativa_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.selectAnswer(alternativa_r2.id));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const alternativa_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", alternativa_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", alternativa_r2.resposta, \" \");\n  }\n}\nfunction TelaPerguntasComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, TelaPerguntasComponent_div_0_li_4_Template, 3, 2, \"li\", 2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.question.conteudo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.question.alternativas);\n  }\n}\nexport class TelaPerguntasComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.loadQuestion();\n  }\n  loadQuestion() {\n    // Aqui você deve fazer uma chamada HTTP para carregar a próxima pergunta do backend\n    // Substitua a URL pela rota adequada em seu backend\n    this.http.get('URL_DA_API_PARA_CARREGAR_PERGUNTA').subscribe(data => {\n      this.question = data;\n    });\n  }\n  selectAnswer(alternativaId) {\n    this.selectedAnswer = alternativaId;\n    this.nextQuestion(); // Chama o método para passar para a próxima pergunta após selecionar uma resposta\n  }\n\n  nextQuestion() {\n    // Aqui você deve enviar a resposta selecionada para o backend e carregar a próxima pergunta\n    // Substitua a URL pela rota adequada em seu backend\n    if (this.selectedAnswer !== undefined) {\n      this.http.post('URL_DA_API_PARA_ENVIAR_RESPOSTA', {\n        perguntaId: this.question.id,\n        respostaId: this.selectedAnswer\n      }).subscribe(() => {\n        this.loadQuestion(); // Carrega a próxima pergunta após enviar a resposta\n        this.selectedAnswer = undefined; // Limpa a resposta selecionada para a próxima pergunta\n      });\n    }\n  }\n  static #_ = this.ɵfac = function TelaPerguntasComponent_Factory(t) {\n    return new (t || TelaPerguntasComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TelaPerguntasComponent,\n    selectors: [[\"app-tela-perguntas\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"question-container\", 4, \"ngIf\"], [1, \"question-container\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"radio\", \"name\", \"alternativa\", 3, \"value\", \"change\"]],\n    template: function TelaPerguntasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TelaPerguntasComponent_div_0_Template, 5, 2, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.question);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TelaPerguntasComponent_div_0_li_4_Template_input_change_1_listener","restoredCtx","ɵɵrestoreView","_r4","alternativa_r2","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","selectAnswer","id","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate1","resposta","ɵɵtemplate","TelaPerguntasComponent_div_0_li_4_Template","ɵɵtextInterpolate","ctx_r0","question","conteudo","alternativas","TelaPerguntasComponent","constructor","http","ngOnInit","loadQuestion","get","subscribe","data","alternativaId","selectedAnswer","nextQuestion","undefined","post","perguntaId","respostaId","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","TelaPerguntasComponent_Template","rf","ctx","TelaPerguntasComponent_div_0_Template"],"sources":["C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.ts","C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Pergunta {\n  id: number;\n  conteudo: string;\n  alternativas: Alternativa[];\n}\n\ninterface Alternativa {\n  id: number;\n  resposta: string;\n}\n\n@Component({\n  selector: 'app-tela-perguntas',\n  templateUrl: './tela-perguntas.component.html',\n  styleUrls: ['./tela-perguntas.component.css']\n})\nexport class TelaPerguntasComponent implements OnInit {\n  question: Pergunta;\n  selectedAnswer: number;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.loadQuestion();\n  }\n\n  loadQuestion() {\n    // Aqui você deve fazer uma chamada HTTP para carregar a próxima pergunta do backend\n    // Substitua a URL pela rota adequada em seu backend\n    this.http.get<Pergunta>('URL_DA_API_PARA_CARREGAR_PERGUNTA').subscribe(data => {\n      this.question = data;\n    });\n  }\n\n  selectAnswer(alternativaId: number) {\n    this.selectedAnswer = alternativaId;\n    this.nextQuestion(); // Chama o método para passar para a próxima pergunta após selecionar uma resposta\n  }\n\n  nextQuestion() {\n    // Aqui você deve enviar a resposta selecionada para o backend e carregar a próxima pergunta\n    // Substitua a URL pela rota adequada em seu backend\n    if (this.selectedAnswer !== undefined) {\n      this.http.post('URL_DA_API_PARA_ENVIAR_RESPOSTA', { perguntaId: this.question.id, respostaId: this.selectedAnswer }).subscribe(() => {\n        this.loadQuestion(); // Carrega a próxima pergunta após enviar a resposta\n        this.selectedAnswer = undefined; // Limpa a resposta selecionada para a próxima pergunta\n      });\n    }\n  }\n}\n","<div class=\"question-container\" *ngIf=\"question\">\n    <h2>{{ question.conteudo }}</h2>\n    <ul>\n      <li *ngFor=\"let alternativa of question.alternativas\">\n        <input type=\"radio\" name=\"alternativa\" [value]=\"alternativa.id\" (change)=\"selectAnswer(alternativa.id)\">\n        {{ alternativa.resposta }}\n      </li>\n    </ul>\n    \n  </div>\n  "],"mappings":";;;;;ICGMA,EAAA,CAAAC,cAAA,SAAsD;IACYD,EAAA,CAAAE,UAAA,oBAAAC,mEAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,cAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAUV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,YAAA,CAAAL,cAAA,CAAAM,EAAA,CAA4B;IAAA,EAAC;IAAvGb,EAAA,CAAAc,YAAA,EAAwG;IACxGd,EAAA,CAAAe,MAAA,GACF;IAAAf,EAAA,CAAAc,YAAA,EAAK;;;;IAFoCd,EAAA,CAAAgB,SAAA,GAAwB;IAAxBhB,EAAA,CAAAiB,UAAA,UAAAV,cAAA,CAAAM,EAAA,CAAwB;IAC/Db,EAAA,CAAAgB,SAAA,GACF;IADEhB,EAAA,CAAAkB,kBAAA,MAAAX,cAAA,CAAAY,QAAA,MACF;;;;;IANNnB,EAAA,CAAAC,cAAA,aAAiD;IACzCD,EAAA,CAAAe,MAAA,GAAuB;IAAAf,EAAA,CAAAc,YAAA,EAAK;IAChCd,EAAA,CAAAC,cAAA,SAAI;IACFD,EAAA,CAAAoB,UAAA,IAAAC,0CAAA,gBAGK;IACPrB,EAAA,CAAAc,YAAA,EAAK;;;;IANDd,EAAA,CAAAgB,SAAA,GAAuB;IAAvBhB,EAAA,CAAAsB,iBAAA,CAAAC,MAAA,CAAAC,QAAA,CAAAC,QAAA,CAAuB;IAEGzB,EAAA,CAAAgB,SAAA,GAAwB;IAAxBhB,EAAA,CAAAiB,UAAA,YAAAM,MAAA,CAAAC,QAAA,CAAAE,YAAA,CAAwB;;;ADgB1D,OAAM,MAAOC,sBAAsB;EAIjCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV;IACA;IACA,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,mCAAmC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAC5E,IAAI,CAACV,QAAQ,GAAGU,IAAI;IACtB,CAAC,CAAC;EACJ;EAEAtB,YAAYA,CAACuB,aAAqB;IAChC,IAAI,CAACC,cAAc,GAAGD,aAAa;IACnC,IAAI,CAACE,YAAY,EAAE,CAAC,CAAC;EACvB;;EAEAA,YAAYA,CAAA;IACV;IACA;IACA,IAAI,IAAI,CAACD,cAAc,KAAKE,SAAS,EAAE;MACrC,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,iCAAiC,EAAE;QAAEC,UAAU,EAAE,IAAI,CAAChB,QAAQ,CAACX,EAAE;QAAE4B,UAAU,EAAE,IAAI,CAACL;MAAc,CAAE,CAAC,CAACH,SAAS,CAAC,MAAK;QAClI,IAAI,CAACF,YAAY,EAAE,CAAC,CAAC;QACrB,IAAI,CAACK,cAAc,GAAGE,SAAS,CAAC,CAAC;MACnC,CAAC,CAAC;;EAEN;EAAC,QAAAI,CAAA,G;qBAhCUf,sBAAsB,EAAA3B,EAAA,CAAA2C,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBnB,sBAAsB;IAAAoB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnBnCrD,EAAA,CAAAoB,UAAA,IAAAmC,qCAAA,iBASQ;;;QATyBvD,EAAA,CAAAiB,UAAA,SAAAqC,GAAA,CAAA9B,QAAA,CAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}