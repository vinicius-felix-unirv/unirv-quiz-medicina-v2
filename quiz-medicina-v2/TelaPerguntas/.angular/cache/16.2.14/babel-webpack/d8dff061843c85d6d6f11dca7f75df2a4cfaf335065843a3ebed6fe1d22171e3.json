{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class QuizQuestionComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  ngOnInit() {\n    this.loadQuestion();\n  }\n  loadQuestion() {\n    // Aqui você deve fazer uma chamada HTTP para carregar a próxima pergunta do backend\n    // Substitua a URL pela rota adequada em seu backend\n    this.http.get('URL_DA_API_PARA_CARREGAR_PERGUNTA').subscribe(data => {\n      this.question = data;\n    });\n  }\n  selectAnswer(alternativaId) {\n    this.selectedAnswer = alternativaId;\n    this.nextQuestion(); // Chama o método para passar para a próxima pergunta após selecionar uma resposta\n  }\n\n  nextQuestion() {\n    // Aqui você deve enviar a resposta selecionada para o backend e carregar a próxima pergunta\n    // Substitua a URL pela rota adequada em seu backend\n    if (this.selectedAnswer !== undefined) {\n      this.http.post('URL_DA_API_PARA_ENVIAR_RESPOSTA', {\n        perguntaId: this.question.id,\n        respostaId: this.selectedAnswer\n      }).subscribe(() => {\n        this.loadQuestion(); // Carrega a próxima pergunta após enviar a resposta\n        this.selectedAnswer = undefined; // Limpa a resposta selecionada para a próxima pergunta\n      });\n    }\n  }\n  static #_ = this.ɵfac = function QuizQuestionComponent_Factory(t) {\n    return new (t || QuizQuestionComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuizQuestionComponent,\n    selectors: [[\"app-tela-perguntas\"]],\n    decls: 2,\n    vars: 0,\n    template: function QuizQuestionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"tela-perguntas works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["QuizQuestionComponent","constructor","http","ngOnInit","loadQuestion","get","subscribe","data","question","selectAnswer","alternativaId","selectedAnswer","nextQuestion","undefined","post","perguntaId","id","respostaId","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","template","QuizQuestionComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.ts","C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Pergunta {\n  id: number;\n  conteudo: string;\n  alternativas: Alternativa[];\n}\n\ninterface Alternativa {\n  id: number;\n  resposta: string;\n}\n\n@Component({\n  selector: 'app-tela-perguntas',\n  templateUrl: './tela-perguntas.component.html',\n  styleUrls: ['./tela-perguntas.component.css']\n})\nexport class QuizQuestionComponent implements OnInit {\n  question: Pergunta;\n  selectedAnswer: number;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.loadQuestion();\n  }\n\n  loadQuestion() {\n    // Aqui você deve fazer uma chamada HTTP para carregar a próxima pergunta do backend\n    // Substitua a URL pela rota adequada em seu backend\n    this.http.get<Pergunta>('URL_DA_API_PARA_CARREGAR_PERGUNTA').subscribe(data => {\n      this.question = data;\n    });\n  }\n\n  selectAnswer(alternativaId: number) {\n    this.selectedAnswer = alternativaId;\n    this.nextQuestion(); // Chama o método para passar para a próxima pergunta após selecionar uma resposta\n  }\n\n  nextQuestion() {\n    // Aqui você deve enviar a resposta selecionada para o backend e carregar a próxima pergunta\n    // Substitua a URL pela rota adequada em seu backend\n    if (this.selectedAnswer !== undefined) {\n      this.http.post('URL_DA_API_PARA_ENVIAR_RESPOSTA', { perguntaId: this.question.id, respostaId: this.selectedAnswer }).subscribe(() => {\n        this.loadQuestion(); // Carrega a próxima pergunta após enviar a resposta\n        this.selectedAnswer = undefined; // Limpa a resposta selecionada para a próxima pergunta\n      });\n    }\n  }\n}\n","<p>tela-perguntas works!</p>\n"],"mappings":";;AAmBA,OAAM,MAAOA,qBAAqB;EAIhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV;IACA;IACA,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,mCAAmC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAC5E,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,CAAC;EACJ;EAEAE,YAAYA,CAACC,aAAqB;IAChC,IAAI,CAACC,cAAc,GAAGD,aAAa;IACnC,IAAI,CAACE,YAAY,EAAE,CAAC,CAAC;EACvB;;EAEAA,YAAYA,CAAA;IACV;IACA;IACA,IAAI,IAAI,CAACD,cAAc,KAAKE,SAAS,EAAE;MACrC,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,iCAAiC,EAAE;QAAEC,UAAU,EAAE,IAAI,CAACP,QAAQ,CAACQ,EAAE;QAAEC,UAAU,EAAE,IAAI,CAACN;MAAc,CAAE,CAAC,CAACL,SAAS,CAAC,MAAK;QAClI,IAAI,CAACF,YAAY,EAAE,CAAC,CAAC;QACrB,IAAI,CAACO,cAAc,GAAGE,SAAS,CAAC,CAAC;MACnC,CAAC,CAAC;;EAEN;EAAC,QAAAK,CAAA,G;qBAhCUlB,qBAAqB,EAAAmB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBvB,qBAAqB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCnBlCV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,4BAAqB;QAAAb,EAAA,CAAAc,YAAA,EAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}