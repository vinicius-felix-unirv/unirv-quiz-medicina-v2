{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction TelaPerguntasComponent_div_1_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵlistener(\"click\", function TelaPerguntasComponent_div_1_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const alternativa_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.selectAnswer(alternativa_r3.id));\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelement(2, \"input\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const alternativa_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"selected\", alternativa_r3.id === ctx_r2.selectedAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", alternativa_r3.id)(\"checked\", alternativa_r3.id === ctx_r2.selectedAnswer);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", alternativa_r3.resposta, \" \");\n  }\n}\nfunction TelaPerguntasComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, TelaPerguntasComponent_div_1_li_4_Template, 4, 5, \"li\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function TelaPerguntasComponent_div_1_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.nextQuestion());\n    });\n    i0.ɵɵtext(6, \"Confirmar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.question.conteudo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.question.alternativas);\n  }\n}\nfunction TelaPerguntasComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Pontua\\u00E7\\u00E3o: \", ctx_r1.score, \" / \", ctx_r1.perguntas.length, \"\");\n  }\n}\nexport class TelaPerguntasComponent {\n  constructor(http) {\n    this.http = http;\n    this.perguntas = [];\n    this.questionIndex = 0;\n    this.showResult = false;\n    this.score = 0;\n  }\n  ngOnInit() {\n    this.loadQuestions();\n  }\n  loadQuestions() {\n    this.http.get('assets/perguntas.json').subscribe(data => {\n      this.perguntas = data;\n      this.loadQuestion();\n    });\n  }\n  loadQuestion() {\n    if (this.perguntas.length > 0 && this.questionIndex < this.perguntas.length) {\n      this.question = this.perguntas[this.questionIndex];\n      this.selectedAnswer = undefined;\n    } else {\n      // Resetar o índice quando todas as perguntas forem respondidas\n      this.questionIndex = 0;\n    }\n  }\n  selectAnswer(alternativaId) {\n    this.selectedAnswer = alternativaId;\n  }\n  nextQuestion() {\n    if (this.selectedAnswer !== undefined) {\n      // Verificar se ainda há perguntas para exibir\n      if (this.questionIndex < this.perguntas.length - 1) {\n        this.questionIndex++;\n        this.loadQuestion();\n      } else {\n        // Se for a última pergunta, exibir o resultado\n        this.showResult = true;\n        this.calculateScore();\n      }\n    }\n  }\n  calculateScore() {\n    // Calcular a pontuação com base nas respostas corretas\n    this.score = this.perguntas.reduce((acc, pergunta) => {\n      const respostaSelecionada = pergunta.alternativas.find(a => a.id === this.selectedAnswer);\n      if (respostaSelecionada && respostaSelecionada.id === pergunta.respostaCorretaId) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n  }\n  static #_ = this.ɵfac = function TelaPerguntasComponent_Factory(t) {\n    return new (t || TelaPerguntasComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TelaPerguntasComponent,\n    selectors: [[\"app-tela-perguntas\"]],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"container\"], [\"class\", \"question-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"question-container\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"alternativa-box\"], [\"type\", \"radio\", \"name\", \"alternativa\", 3, \"value\", \"checked\"]],\n    template: function TelaPerguntasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TelaPerguntasComponent_div_1_Template, 7, 2, \"div\", 1);\n        i0.ɵɵtemplate(2, TelaPerguntasComponent_div_2_Template, 3, 2, \"div\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.question && !ctx.showResult);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showResult);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf],\n    styles: [\".container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n  }\\n  \\n  .question-container[_ngcontent-%COMP%] {\\n    max-width: 900px;\\n    padding: 20px;\\n    border: 2px solid #ccc;\\n    border-radius: 10px;\\n  }\\n  \\n  .question-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    margin-bottom: 20px;\\n  }\\n  \\n  ul[_ngcontent-%COMP%] {\\n    list-style-type: none;\\n    padding: 0;\\n    text-align: center; \\n\\n  }\\n  \\n  li[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n  }\\n  \\n  input[type=\\\"radio\\\"][_ngcontent-%COMP%] {\\n    display: none;\\n  }\\n  \\n  .alternativa-box[_ngcontent-%COMP%] {\\n    display: inline-block;\\n    width: 70%;\\n    padding: 15px;\\n    border: 2px solid #ccc;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    text-align: center; \\n\\n  }\\n  \\n  .alternativa-box[_ngcontent-%COMP%]:hover {\\n    background-color: #f0f0f0;\\n  }\\n  \\n  \\n  .selected[_ngcontent-%COMP%] {\\n    background-color: #e0e0e0;\\n  }\\n  .button-container[_ngcontent-%COMP%] {\\n    text-align: center; \\n\\n    margin-top: 20px; \\n\\n  }\\n  \\n  .confirm-button[_ngcontent-%COMP%] {\\n    padding: 10px 20px; \\n\\n    background-color: #007bff; \\n\\n    color: #fff; \\n\\n    border: none; \\n\\n    border-radius: 5px; \\n\\n    cursor: pointer;\\n  }\\n  \\n  .confirm-button[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3; \\n\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGVsYS1wZXJndW50YXMvdGVsYS1wZXJndW50YXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLHFCQUFxQjtJQUNyQixVQUFVO0lBQ1Ysa0JBQWtCLEVBQUUsK0JBQStCO0VBQ3JEOztFQUVBO0lBQ0UsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsYUFBYTtFQUNmOztFQUVBO0lBQ0UscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2Ysa0JBQWtCLEVBQUUsdUNBQXVDO0VBQzdEOztFQUVBO0lBQ0UseUJBQXlCO0VBQzNCOzs7RUFHQTtJQUNFLHlCQUF5QjtFQUMzQjtFQUNBO0lBQ0Usa0JBQWtCLEVBQUUsdUNBQXVDO0lBQzNELGdCQUFnQixFQUFFLHlCQUF5QjtFQUM3Qzs7RUFFQTtJQUNFLGtCQUFrQixFQUFFLHdCQUF3QjtJQUM1Qyx5QkFBeUIsRUFBRSwwQkFBMEI7SUFDckQsV0FBVyxFQUFFLDBCQUEwQjtJQUN2QyxZQUFZLEVBQUUsbUJBQW1CO0lBQ2pDLGtCQUFrQixFQUFFLHNCQUFzQjtJQUMxQyxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsNENBQTRDO0VBQ3pFIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuICB9XHJcbiAgXHJcbiAgLnF1ZXN0aW9uLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDkwMHB4O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIH1cclxuICBcclxuICAucXVlc3Rpb24tY29udGFpbmVyIGgyIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIHVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRyYWxpemEgYXMgYWx0ZXJuYXRpdmFzICovXHJcbiAgfVxyXG4gIFxyXG4gIGxpIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICBcclxuICAuYWx0ZXJuYXRpdmEtYm94IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiA3MCU7XHJcbiAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgLyogQ2VudHJhbGl6YSBvIHRleHRvIGRlbnRybyBkYSBjYWl4YSAqL1xyXG4gIH1cclxuICBcclxuICAuYWx0ZXJuYXRpdmEtYm94OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIC5zZWxlY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwO1xyXG4gIH1cclxuICAuYnV0dG9uLWNvbnRhaW5lciB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIENlbnRyYWxpemEgbyBib3TDg8KjbyBob3Jpem9udGFsbWVudGUgKi9cclxuICAgIG1hcmdpbi10b3A6IDIwcHg7IC8qIEVzcGHDg8KnYW1lbnRvIHN1cGVyaW9yICovXHJcbiAgfVxyXG4gIFxyXG4gIC5jb25maXJtLWJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7IC8qIEVzcGHDg8KnYW1lbnRvIGludGVybm8gKi9cclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7IC8qIENvciBkZSBmdW5kbyBkbyBib3TDg8KjbyAqL1xyXG4gICAgY29sb3I6ICNmZmY7IC8qIENvciBkbyB0ZXh0byBkbyBib3TDg8KjbyAqL1xyXG4gICAgYm9yZGVyOiBub25lOyAvKiBSZW1vdmUgYSBib3JkYSAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBCb3JkYSBhcnJlZG9uZGFkYSAqL1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAuY29uZmlybS1idXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMzsgLyogQ29yIGRlIGZ1bmRvIGRvIGJvdMODwqNvIGFvIHBhc3NhciBvIG1vdXNlICovXHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TelaPerguntasComponent_div_1_li_4_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","_r5","alternativa_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","selectAnswer","id","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassProp","ctx_r2","selectedAnswer","ɵɵproperty","ɵɵtextInterpolate1","resposta","ɵɵtemplate","TelaPerguntasComponent_div_1_li_4_Template","TelaPerguntasComponent_div_1_Template_button_click_5_listener","_r7","ctx_r6","nextQuestion","ɵɵtextInterpolate","ctx_r0","question","conteudo","alternativas","ɵɵtextInterpolate2","ctx_r1","score","perguntas","length","TelaPerguntasComponent","constructor","http","questionIndex","showResult","ngOnInit","loadQuestions","get","subscribe","data","loadQuestion","undefined","alternativaId","calculateScore","reduce","acc","pergunta","respostaSelecionada","find","a","respostaCorretaId","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","TelaPerguntasComponent_Template","rf","ctx","TelaPerguntasComponent_div_1_Template","TelaPerguntasComponent_div_2_Template"],"sources":["C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.ts","C:\\Users\\pedro\\TelaPerguntas\\src\\app\\tela-perguntas\\tela-perguntas.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\ninterface Pergunta {\n  id: number;\n  tipo: 'texto' | 'imagem';\n  conteudo: string;\n  alternativas: Alternativa[];\n  respostaCorretaId: number; // Adicione o ID da alternativa correta\n}\n\ninterface Alternativa {\n  id: number;\n  resposta: string;\n}\n\n@Component({\n  selector: 'app-tela-perguntas',\n  templateUrl: './tela-perguntas.component.html',\n  styleUrls: ['./tela-perguntas.component.css']\n})\nexport class TelaPerguntasComponent implements OnInit {\n  perguntas: Pergunta[] = [];\n  question: Pergunta | undefined;\n  questionIndex: number = 0;\n  selectedAnswer: number | undefined;\n  showResult: boolean = false;\n  score: number = 0;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.loadQuestions();\n  }\n\n  loadQuestions() {\n    this.http.get<Pergunta[]>('assets/perguntas.json').subscribe(data => {\n      this.perguntas = data;\n      this.loadQuestion();\n    });\n  }\n\n  loadQuestion() {\n    if (this.perguntas.length > 0 && this.questionIndex < this.perguntas.length) {\n      this.question = this.perguntas[this.questionIndex]; \n      this.selectedAnswer = undefined;\n    } else {\n      // Resetar o índice quando todas as perguntas forem respondidas\n      this.questionIndex = 0;\n    }\n  }\n\n  selectAnswer(alternativaId: number) {\n    this.selectedAnswer = alternativaId;\n  }\n\n  nextQuestion() {\n    if (this.selectedAnswer !== undefined) {\n      // Verificar se ainda há perguntas para exibir\n      if (this.questionIndex < this.perguntas.length - 1) {\n        this.questionIndex++;\n        this.loadQuestion();\n      } else {\n        // Se for a última pergunta, exibir o resultado\n        this.showResult = true;\n        this.calculateScore();\n      }\n    }\n  }\n\n  calculateScore() {\n    // Calcular a pontuação com base nas respostas corretas\n    this.score = this.perguntas.reduce((acc, pergunta) => {\n      const respostaSelecionada = pergunta.alternativas.find(a => a.id === this.selectedAnswer);\n      if (respostaSelecionada && respostaSelecionada.id === pergunta.respostaCorretaId) {\n        return acc + 1;\n      } else {\n        return acc;\n      }\n    }, 0);\n  }\n}\n","<div class=\"container\">\n    <div class=\"question-container\" *ngIf=\"question && !showResult\">\n      <h2>{{ question.conteudo }}</h2>\n      <ul>\n        <li *ngFor=\"let alternativa of question.alternativas\" (click)=\"selectAnswer(alternativa.id)\">\n          <div class=\"alternativa-box\" [class.selected]=\"alternativa.id === selectedAnswer\">\n            <input type=\"radio\" name=\"alternativa\" [value]=\"alternativa.id\" [checked]=\"alternativa.id === selectedAnswer\">\n            {{ alternativa.resposta }}\n          </div>\n        </li>\n      </ul>\n      <button (click)=\"nextQuestion()\">Confirmar</button>\n    </div>\n  \n    <div *ngIf=\"showResult\">\n      <h2>Pontuação: {{ score }} / {{ perguntas.length }}</h2>\n    \n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}